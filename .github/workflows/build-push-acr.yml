name: "Azure Container Registry Build and Deploy to AKS"
on: 
  pull_request: # to be removed later as the pipeline is confirmed to work
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev
    paths:
      - 'build/**'
      - 'cmd/**'
      - 'web/**'
  workflow_dispatch:

env:
  IMAGE_NAME: daily-quote-go
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY_LOGIN_SERVER: acrdevdailyquote.azurecr.io

permissions:
   id-token: write
   contents: read
   actions: read

jobs:
  build:
    name: 'Build and push to ACR'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: |
          docker buildx build -f ./build/Dockerfile -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker buildx build -f ./build/Dockerfile -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker image to ACR
        run: |
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
        
  deploy:
    name: 'Deploy to AKS'
    needs: build
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}

      - name: Configure deployment
        uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: './deployments/helm/daily-quote-go/'
          overrides: |
            replicas:2
          helm-version: 'latest'
          silent: 'false'
        id: bake

      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        id: deploy-aks